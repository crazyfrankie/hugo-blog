<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Crazyfrank&#39;s Blog</title>
        <link>https://hugo.crazyfrank.top/en/posts/</link>
        <description>All Posts | Crazyfrank&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en-US</language><managingEditor>axu9417@gmail.com (crazyfrank)</managingEditor>
            <webMaster>axu9417@gmail.com (crazyfrank)</webMaster><atom:link href="https://hugo.crazyfrank.top/en/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Understanding Decentralization Through Log Processing</title>
    <link>https://hugo.crazyfrank.top/en/decentration/</link>
    <pubDate>Fri, 05 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>https://hugo.crazyfrank.top/en/decentration/</guid>
    <description><![CDATA[<p>This article explores decentralized system design concepts and implementation approaches through the lens of log processing.</p>
<h2 id="overview-of-decentralized-systems">Overview of Decentralized Systems</h2>
<p>Decentralization is a key concept in distributed system design that improves system reliability and fault tolerance by distributing control across multiple nodes.</p>
<p>In architecture, &ldquo;decentralization&rdquo; doesn&rsquo;t necessarily mean &ldquo;completely no center,&rdquo; but rather:</p>
<ul>
<li>Avoid irreplaceable single points of failure by using distributed, peer-to-peer nodes to share responsibilities</li>
<li>System availability and scalability don&rsquo;t depend on any single critical node</li>
</ul>
<h2 id="log-processing">Log Processing</h2>




<div class="lightbox-container">
  
</div>

<div id="lightbox" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); z-index: 1000; cursor: pointer;" onclick="closeLightbox()">
  
</div>

<script>
function openLightbox(src) {
  document.getElementById('lightbox-img').src = src;
  document.getElementById('lightbox').style.display = 'block';
}
function closeLightbox() {
  document.getElementById('lightbox').style.display = 'none';
}
</script>

<p>Taking the <a href="https://www.elastic.co/elastic-stack" target="_blank" rel="noopener noreffer ">ELK</a> log processing architecture as an example:</p>]]></description>
</item>
<item>
    <title>Some Thoughts on DDD</title>
    <link>https://hugo.crazyfrank.top/en/ddd/</link>
    <pubDate>Thu, 04 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>https://hugo.crazyfrank.top/en/ddd/</guid>
    <description><![CDATA[<h2 id="project-introduction">Project Introduction</h2>
<p>I&rsquo;m writing this article mainly to share some learning insights from the project practice of DDD. Since I&rsquo;m too lazy to read the theory, I&rsquo;m just guessing how DDD should be designed. For more details, please refer to the DDD official website: <a href="https://domain-driven-design.org/zh/ddd-concept-reference.html" target="_blank" rel="noopener noreffer ">DDD Concept Introduction</a></p>
<p>Recently, ByteDance has open-sourced their open-coze. The front end is React + TS, and the back end uses Go. Since I didn&rsquo;t use Py or TS, and I have a bit more knowledge of Go, I started learning it.</p>]]></description>
</item>
<item>
    <title>realisation</title>
    <link>https://hugo.crazyfrank.top/en/life/</link>
    <pubDate>Mon, 01 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>https://hugo.crazyfrank.top/en/life/</guid>
    <description><![CDATA[<p>Man&rsquo;s physical body is the past and his consciousness is the present and future.</p>]]></description>
</item>
</channel>
</rss>
