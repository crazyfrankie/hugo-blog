<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Crazyfrank&#39;s Blog</title>
        <link>http://localhost:1313/en/posts/</link>
        <description>All Posts | Crazyfrank&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en-US</language><managingEditor>axu9417@gmail.com (crazyfrank)</managingEditor>
            <webMaster>axu9417@gmail.com (crazyfrank)</webMaster><atom:link href="http://localhost:1313/en/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Understanding Decentralization Through Log Processing</title>
    <link>http://localhost:1313/en/posts/understanding-decentralization-through-log-processing/</link>
    <pubDate>Fri, 05 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>http://localhost:1313/en/posts/understanding-decentralization-through-log-processing/</guid>
    <description><![CDATA[<p>This article explores decentralized system design concepts and implementation approaches through the lens of log processing.</p>
<h2 id="overview-of-decentralized-systems">Overview of Decentralized Systems</h2>
<p>Decentralization is a key concept in distributed system design that improves system reliability and fault tolerance by distributing control across multiple nodes.</p>
<p>In architecture, &ldquo;decentralization&rdquo; doesn&rsquo;t necessarily mean &ldquo;completely no center,&rdquo; but rather:</p>
<ul>
<li>Avoid irreplaceable single points of failure by using distributed, peer-to-peer nodes to share responsibilities</li>
<li>System availability and scalability don&rsquo;t depend on any single critical node</li>
</ul>
<h2 id="log-processing">Log Processing</h2>




<div class="lightbox-container">
  
</div>

<div id="lightbox" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); z-index: 1000; cursor: pointer;" onclick="closeLightbox()">
  
</div>

<script>
function openLightbox(src) {
  document.getElementById('lightbox-img').src = src;
  document.getElementById('lightbox').style.display = 'block';
}
function closeLightbox() {
  document.getElementById('lightbox').style.display = 'none';
}
</script>

<p>Taking the <a href="https://www.elastic.co/elastic-stack" target="_blank" rel="noopener noreffer ">ELK</a> log processing architecture as an example:</p>]]></description>
</item>
<item>
    <title>Some Thoughts on DDD</title>
    <link>http://localhost:1313/en/posts/some-thoughts-on-ddd/</link>
    <pubDate>Thu, 04 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>http://localhost:1313/en/posts/some-thoughts-on-ddd/</guid>
    <description><![CDATA[<h2 id="project-introduction">Project Introduction</h2>
<p>I&rsquo;m writing this article mainly to share some learning insights from the project practice of DDD. Since I&rsquo;m too lazy to read the theory, I&rsquo;m just guessing how DDD should be designed. For more details, please refer to the DDD official website: <a href="https://domain-driven-design.org/zh/ddd-concept-reference.html" target="_blank" rel="noopener noreffer ">DDD Concept Introduction</a></p>
<p>Recently, ByteDance has open-sourced their open-coze. The front end is React + TS, and the back end uses Go. Since I didn&rsquo;t use Py or TS, and I have a bit more knowledge of Go, I started learning it.</p>]]></description>
</item>
<item>
    <title>Logs and Errors</title>
    <link>http://localhost:1313/en/posts/logs-and-errors/</link>
    <pubDate>Wed, 03 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>http://localhost:1313/en/posts/logs-and-errors/</guid>
    <description><![CDATA[<h2 id="logs-and-errors">Logs and Errors</h2>
<p>Generally speaking, in our project, if we strictly divide it according to a hierarchical structure, it is roughly <code>handler</code>, <code>service</code> (which is further subdivided into <code>application</code> in DDD), and
<code>domain</code>, <code>dao</code>.</p>
<p>For the <code>dao</code> layer, if an error occurs, we deal with it by directly up-throwing and selectively logging the error, for example,
there may be some interfaces that involve parameter validation at the <code>dao</code> layer, manually managing transactions, and so on, which require logging, but the error is still directly up-throwing.</p>]]></description>
</item>
<item>
    <title>DB-Cache Consistency Problem</title>
    <link>http://localhost:1313/en/posts/db-cache-consistency-problem/</link>
    <pubDate>Tue, 02 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>http://localhost:1313/en/posts/db-cache-consistency-problem/</guid>
    <description><![CDATA[<p>How to ensure the consistency between cache and database is a topic that has been discussed over and over again.</p>
<p>But many people still have a lot of doubts about this issue:</p>
<ul>
<li>Should the cache be updated or deleted?</li>
<li>Should I choose to update the database first and then delete the cache, or to delete the cache first and then update the database?</li>
<li>Why introduce message queues to ensure consistency?</li>
<li>What problems may arise from delaying double deletion? Should we use it or not?</li>
<li>&hellip;</li>
</ul>
<h2 id="introducing-cache-improves-performance">Introducing cache improves performance</h2>
<p>Let&rsquo;s start with the simplest scenario.</p>]]></description>
</item>
<item>
    <title>Load Balancing</title>
    <link>http://localhost:1313/en/posts/load-balancing/</link>
    <pubDate>Tue, 02 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>http://localhost:1313/en/posts/load-balancing/</guid>
    <description><![CDATA[<h2 id="overview">Overview</h2>
<p>In a distributed environment, each microservice will have different instances. Service registration and service discovery solve the problem of &ldquo;what are the available instances&rdquo;, and the remaining question is &ldquo;who should I send the request to with so many available instances?&rdquo;. The question that remains is, &ldquo;With so many available instances, who do I send the request to? Intuitively, most people, if they have heard of some specialized terminology, will directly think of &ldquo;load balancing&rdquo;. What exactly is load balancing?</p>]]></description>
</item>
<item>
    <title>MVCC and MySQL Logs</title>
    <link>http://localhost:1313/en/posts/mvcc-and-mysql-logs/</link>
    <pubDate>Tue, 02 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>http://localhost:1313/en/posts/mvcc-and-mysql-logs/</guid>
    <description><![CDATA[<p>Under the <strong>MVCC</strong> mechanism, <strong>Redo Log and Bin Log are mainly useful at transaction commit time</strong> and their roles and trigger timing are as follows:</p>
<hr>
<h3 id="logging-behavior-during-transaction-execution">Logging behavior during transaction execution</h3>
<p>When executing:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">UPDATE</span><span class="w"> </span><span class="n">users</span><span class="w"> </span><span class="k">SET</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">26</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span></span></span></code></pre></div></div>
<p>MySQL&rsquo;s <strong>transaction execution order</strong> (combined with MVCC + logging) is as follows:</p>]]></description>
</item>
<item>
    <title>realisation</title>
    <link>http://localhost:1313/en/posts/realisation/</link>
    <pubDate>Mon, 01 Sep 2025 10:00:00 &#43;0800</pubDate>
    <author>crazyfrank</author>
    <guid>http://localhost:1313/en/posts/realisation/</guid>
    <description><![CDATA[<p>Man&rsquo;s physical body is the past and his consciousness is the present and future.</p>]]></description>
</item>
</channel>
</rss>
