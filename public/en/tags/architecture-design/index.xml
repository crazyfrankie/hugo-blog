<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture Design on Crazyfrank&#39;s Blog</title>
    <link>http://localhost:1313/en/tags/architecture-design/</link>
    <description>Recent content in Architecture Design on Crazyfrank&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <managingEditor>axu9417@gmail.com (crazyfrank)</managingEditor>
    <webMaster>axu9417@gmail.com (crazyfrank)</webMaster>
    <lastBuildDate>Thu, 11 Sep 2025 17:17:35 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/en/tags/architecture-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Architecture Design-Comment System</title>
      <link>http://localhost:1313/en/posts/architecture-design-comment-system/</link>
      <pubDate>Thu, 11 Sep 2025 10:00:00 +0800</pubDate><author>axu9417@gmail.com (crazyfrank)</author>
      <guid>http://localhost:1313/en/posts/architecture-design-comment-system/</guid>
      <description>&lt;p&gt;The most important thing in architectural design is to &lt;strong&gt;understand the positioning of the entire product system in the system&lt;/strong&gt;. Only by figuring out the background behind the system can you make the best design and abstraction. Donâ€™t be a translation machine for demand, first understand the essence behind the business and the original intention of the matter.&lt;/p&gt;&#xA;&lt;p&gt;Comment system, when we go to the small, we are video comment system, when we go to the large, we are commenting platform, we can access various business forms.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cache and DB - Consistency Tradeoffs</title>
      <link>http://localhost:1313/en/posts/cache-and-db-consistency-tradeoffs/</link>
      <pubDate>Thu, 11 Sep 2025 10:00:00 +0800</pubDate><author>axu9417@gmail.com (crazyfrank)</author>
      <guid>http://localhost:1313/en/posts/cache-and-db-consistency-tradeoffs/</guid>
      <description>&lt;p&gt;Today we talk about bypass caching strategies.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction-to-concepts&#34;&gt;Introduction to Concepts&lt;/h2&gt;&#xA;&lt;p&gt;Generally speaking we introduce caching in our business, which involves three ways of manipulating the database and caching:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Read-through:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;application reads data.&lt;/li&gt;&#xA;&lt;li&gt;it checks Redis. a hit is returned.&lt;/li&gt;&#xA;&lt;li&gt;If there is no hit, check MySQL.&lt;/li&gt;&#xA;&lt;li&gt;Fetch the data from MySQL and write it to Redis.&lt;/li&gt;&#xA;&lt;li&gt;Return the data.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Write through:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The application updates the data.&lt;/li&gt;&#xA;&lt;li&gt;Code executes simultaneously (or in the same transaction):&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Update the MySQL database.&lt;/li&gt;&#xA;&lt;li&gt;Update (or invalidate) the corresponding cache in Redis.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Bypass the cache:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Read operations: Use the &amp;ldquo;read-through&amp;rdquo; policy.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cache Hit -&amp;gt; return cached data.&lt;/li&gt;&#xA;&lt;li&gt;Cache Miss -&amp;gt; Read from DB, backfill Cache and return.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Write operation: first update DB, then delete (invalidate) cache.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;This is the essence of the &amp;ldquo;bypass cache&amp;rdquo; strategy - &amp;ldquo;update the database first, then delete the cache&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For read-through from the above introduction can also be seen that it is not used alone, and write-through, there is no middleware support for simultaneous operation of the database, so generally do not use, so the most daily use of the third way: bypass caching!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
