<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Distributed Systems on Crazyfrank's Blog</title><link>https://hugo.crazyfrank.top/en/tags/distributed-systems/</link><description>Recent content in Distributed Systems on Crazyfrank's Blog</description><generator>Hugo</generator><language>en-US</language><managingEditor>axu9417@gmail.com (crazyfrank)</managingEditor><webMaster>axu9417@gmail.com (crazyfrank)</webMaster><lastBuildDate>Sat, 06 Sep 2025 17:08:38 +0800</lastBuildDate><atom:link href="https://hugo.crazyfrank.top/en/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding Decentralization Through Log Processing</title><link>https://hugo.crazyfrank.top/en/decentration/</link><pubDate>Fri, 05 Sep 2025 10:00:00 +0800</pubDate><author>axu9417@gmail.com (crazyfrank)</author><guid>https://hugo.crazyfrank.top/en/decentration/</guid><description>&lt;p>This article explores decentralized system design concepts and implementation approaches through the lens of log processing.&lt;/p>
&lt;h2 id="overview-of-decentralized-systems">Overview of Decentralized Systems&lt;/h2>
&lt;p>Decentralization is a key concept in distributed system design that improves system reliability and fault tolerance by distributing control across multiple nodes.&lt;/p>
&lt;p>In architecture, &amp;ldquo;decentralization&amp;rdquo; doesn&amp;rsquo;t necessarily mean &amp;ldquo;completely no center,&amp;rdquo; but rather:&lt;/p>
&lt;ul>
&lt;li>Avoid irreplaceable single points of failure by using distributed, peer-to-peer nodes to share responsibilities&lt;/li>
&lt;li>System availability and scalability don&amp;rsquo;t depend on any single critical node&lt;/li>
&lt;/ul>
&lt;h2 id="log-processing">Log Processing&lt;/h2>




&lt;div class="lightbox-container">
 &lt;img src="https://hugo.crazyfrank.top/images/decentration/img-1.png" alt="Centralized Architecture Diagram" style="width: 1200px; cursor: pointer;" onclick="openLightbox('\/images\/decentration\/img-1.png')">
&lt;/div>

&lt;div id="lightbox" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); z-index: 1000; cursor: pointer;" onclick="closeLightbox()">
 &lt;img id="lightbox-img" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); max-width: 90%; max-height: 90%;">
&lt;/div>

&lt;script>
function openLightbox(src) {
 document.getElementById('lightbox-img').src = src;
 document.getElementById('lightbox').style.display = 'block';
}
function closeLightbox() {
 document.getElementById('lightbox').style.display = 'none';
}
&lt;/script>

&lt;p>Taking the &lt;a href="https://www.elastic.co/elastic-stack" target="_blank" rel="noopener noreffer ">ELK&lt;/a> log processing architecture as an example:&lt;/p></description></item></channel></rss>